package com.expense.hibernate.domains;

// Generated Jul 14, 2013 4:30:53 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Notification generated by hbm2java
 */
@Entity
@Table(name = "notification")
public class Notification implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5215110949696525385L;
	private Long id;
	private Users usersByCreatedBy;
	private Users usersByModifiedBy;
	private Category category;
	private String notificationTitle;
	private Date notificationStartDate;
	private Date notificationEndDate;
	private Date notificationDueDate;
	private Integer notifyDays;
	private Integer notifyVia;
	private Integer status;
	private Date createdDate;
	private Date modifiedDate;

	public Notification() {
	}

	public Notification(Users usersByCreatedBy, Users usersByModifiedBy,
			Category category, String notificationTitle,
			Date notificationStartDate, Date notificationEndDate,
			Date notificationDueDate, Integer notifyDays, Integer notifyVia,
			Integer status, Date createdDate, Date modifiedDate) {
		this.usersByCreatedBy = usersByCreatedBy;
		this.usersByModifiedBy = usersByModifiedBy;
		this.category = category;
		this.notificationTitle = notificationTitle;
		this.notificationStartDate = notificationStartDate;
		this.notificationEndDate = notificationEndDate;
		this.notificationDueDate = notificationDueDate;
		this.notifyDays = notifyDays;
		this.notifyVia = notifyVia;
		this.status = status;
		this.createdDate = createdDate;
		this.modifiedDate = modifiedDate;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by")
	public Users getUsersByCreatedBy() {
		return this.usersByCreatedBy;
	}

	public void setUsersByCreatedBy(Users usersByCreatedBy) {
		this.usersByCreatedBy = usersByCreatedBy;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "modified_by")
	public Users getUsersByModifiedBy() {
		return this.usersByModifiedBy;
	}

	public void setUsersByModifiedBy(Users usersByModifiedBy) {
		this.usersByModifiedBy = usersByModifiedBy;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "category_id")
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@Column(name = "notification_title", length = 145)
	public String getNotificationTitle() {
		return this.notificationTitle;
	}

	public void setNotificationTitle(String notificationTitle) {
		this.notificationTitle = notificationTitle;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "notification_start_date", length = 19)
	public Date getNotificationStartDate() {
		return this.notificationStartDate;
	}

	public void setNotificationStartDate(Date notificationStartDate) {
		this.notificationStartDate = notificationStartDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "notification_end_date", length = 19)
	public Date getNotificationEndDate() {
		return this.notificationEndDate;
	}

	public void setNotificationEndDate(Date notificationEndDate) {
		this.notificationEndDate = notificationEndDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "notification_due_date", length = 19)
	public Date getNotificationDueDate() {
		return this.notificationDueDate;
	}

	public void setNotificationDueDate(Date notificationDueDate) {
		this.notificationDueDate = notificationDueDate;
	}

	@Column(name = "notify_days")
	public Integer getNotifyDays() {
		return this.notifyDays;
	}

	public void setNotifyDays(Integer notifyDays) {
		this.notifyDays = notifyDays;
	}

	@Column(name = "notify_via")
	public Integer getNotifyVia() {
		return this.notifyVia;
	}

	public void setNotifyVia(Integer notifyVia) {
		this.notifyVia = notifyVia;
	}

	@Column(name = "status")
	public Integer getStatus() {
		return this.status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modified_date", length = 19)
	public Date getModifiedDate() {
		return this.modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		this.modifiedDate = modifiedDate;
	}

}
