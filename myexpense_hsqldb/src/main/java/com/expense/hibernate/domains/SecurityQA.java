package com.expense.hibernate.domains;

// Generated Jul 14, 2013 4:30:53 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Notification generated by hbm2java
 */
@Entity
@Table(name = "password_wallet_qa")
public class SecurityQA implements java.io.Serializable {

	private static final long serialVersionUID = -5145015026474815306L;

	private Long id;
	private Users usersByCreatedBy;
	private Users usersByModifiedBy;	
	private String securityQuestion;
	private String securityAnswer;
	private PasswordWallet passwordWallet;
	private Date createdDate;
	private Date modifiedDate;

	public SecurityQA() {
	}

	/**
	 * @param id
	 */
	public SecurityQA(Long id) {
		this.id = id;
	}
	

	/**
	 * @return the id
	 */
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return id;
	}

	/**
	 * @param id
	 *            the id to set
	 */
	public void setId(Long id) {
		this.id = id;
	}
	

	/**
	 * @return the passwordWallet
	 */
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "password_wallet_id")
	public PasswordWallet getPasswordWallet() {
		return passwordWallet;
	}

	/**
	 * @param passwordWallet the passwordWallet to set
	 */
	public void setPasswordWallet(PasswordWallet passwordWallet) {
		this.passwordWallet = passwordWallet;
	}

	/**
	 * @return the usersByCreatedBy
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_by")
	public Users getUsersByCreatedBy() {
		return usersByCreatedBy;
	}

	/**
	 * @param usersByCreatedBy
	 *            the usersByCreatedBy to set
	 */
	public void setUsersByCreatedBy(Users usersByCreatedBy) {
		this.usersByCreatedBy = usersByCreatedBy;
	}

	/**
	 * @return the usersByModifiedBy
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "modified_by")
	public Users getUsersByModifiedBy() {
		return usersByModifiedBy;
	}

	/**
	 * @param usersByModifiedBy
	 *            the usersByModifiedBy to set
	 */
	public void setUsersByModifiedBy(Users usersByModifiedBy) {
		this.usersByModifiedBy = usersByModifiedBy;
	}

	/**
	 * @return the securityQuestion
	 */
	@Column(name = "security_question", length = 300)
	public String getSecurityQuestion() {
		return securityQuestion;
	}

	/**
	 * @param securityQuestion
	 *            the securityQuestion to set
	 */
	public void setSecurityQuestion(String securityQuestion) {
		this.securityQuestion = securityQuestion;
	}

	/**
	 * @return the securityAnswer
	 */
	@Column(name = "security_answer", length = 200)
	public String getSecurityAnswer() {
		return securityAnswer;
	}

	/**
	 * @param securityAnswer
	 *            the securityAnswer to set
	 */
	public void setSecurityAnswer(String securityAnswer) {
		this.securityAnswer = securityAnswer;
	}

	/**
	 * @return the createdDate
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", length = 19)
	public Date getCreatedDate() {
		return createdDate;
	}

	/**
	 * @param createdDate
	 *            the createdDate to set
	 */
	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	/**
	 * @return the modifiedDate
	 */
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modified_date", length = 19)
	public Date getModifiedDate() {
		return modifiedDate;
	}

	/**
	 * @param modifiedDate
	 *            the modifiedDate to set
	 */
	public void setModifiedDate(Date modifiedDate) {
		this.modifiedDate = modifiedDate;
	}

}
